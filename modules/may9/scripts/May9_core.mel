// Store May9 Version
string $may9Version = "May9 Next.0.5";
string $may9CodeName = "is powered by MMtoKey core";
int $may9Value = "10050";

// Inizialize DAG Menu Procedure
catchQuiet(dagMenuProc("", ""));

// Inizialize Break Connections
channelBoxCommand -break;

// Inizialize Main Create Menu
ModCreateMenu mainCreateMenu;

// Inizialize Marking Menues
source May9_MMs.mel;

// Set new scene opened preferences
string $myLayoutReset = "int $myLayout = 0";
scriptJob -e "NewSceneOpened" $myLayoutReset;
scriptJob -e "SceneOpened" $myLayoutReset;

// Preload Crease Set Editor
python "from maya.app.general import creaseSetEditor";

// Preload Cache Playback Preferences
if (`about -api` >= 20190000){
	python "from maya.plugin.evaluator.cache_preferences import CachePreferenceEnabled";
}

// Preload Boss Editor
if ( catchQuiet( `python "import boss.BossEditor as be"` ) )
	print "Please check Bifrost installation";

// First run May9 procedures
if (`optionVar -q "May9ActivationCheck"` < 31){

    //Source userPrefs only at May9 initialization
    source May9_layouts.mel;

    // Enable Membrane Paintable Attributes
	makePaintable  -at "doubleArray" "membrane" "weightPerVertex";
}

if (`optionVar -q "May9ActivationCheck"` < 320){

	// Store initial hyperShadeDockingLayout
	optionVar -sv da_hyperShadeDockingLayout `optionVar -q hyperShadeDockingLayout`;

	// Set initial hyperShadeDockingLayout
	optionVar -sv "hyperShadeDockingLayout" "000000ff00000000fd0000000200000001000001bd00000372fc0200000002fc0000000000000163000000a501000011fa000000000100000003fb00000024004c006f006f006b00640065007600430072006500610074006500500061006e0065006c0100000000ffffffff000000b500fffffffb00000020004c006f006f006b00640065007600420069006e007300500061006e0065006c0100000000ffffffff0000005600fffffffb0000002c004c006f006f006b00640065007600530068006100640065007200620061006c006c00500061006e0065006c010000042c000001940000004600fffffffb00000028004c006f006f006b00640065007600500072006f0070006500720074007900500061006e0065006c010000016900000209000000f100ffffff000000020000043800000110fc0100000001fb00000026004c006f006f006b00640065007600420072006f007700730065007200500061006e0065006c0100000000000004380000008700ffffff000004380000025c00000004000000020000000800000002fc00000000";

	// Store initial Connection Editor prefs
	optionVar -iv da_connectWindowLeftSHD `optionVar -q connectWindowLeftSHD`;
	optionVar -iv da_connectWindowRightSHD `optionVar -q connectWindowRightSHD`;

	// Set Connection Editor prefs
	optionVar -iv "connectWindowLeftSHD" 1 -iv "connectWindowRightSHD" 1;

	// Store initial melDuplicateVariableWarnings
	optionVar -iv da_DuplicateVariableWarnings `optionVar -q melDuplicateVariableWarnings`;

	// Disable melDuplicateVariableWarnings
	melOptions -duplicateVariableWarnings off;

	// Declare initial layout state
	global int $myLayout = 0;
}

if (`optionVar -q "May9ActivationCheck"` < 10000){

	// Store inital hotkeySet
	optionVar -sv da_initialHotkey `hotkeySet -q -current`;

	// Preload hotkeys
	source May9_hotkeys.mel;

	// Set May9 Next hotkeySet
	hotkeySet -edit -current May9_Next;
}

if (`optionVar -q "May9ActivationCheck"` < $may9Value){

	// Define May9 Next installation status 
	optionVar -iv May9ActivationCheck $may9Value;

	// Preload userRuntime
	source May9_userRuntime.mel;

	// Clean userRuntime
	May9_runTimeCommandsRemover;

	// Preload userRuntime
	May9_runTimeCommands;

	// Store Preferences Changes
	savePrefs -g -hk;
}

// Preload May9Menu
evalDeferred ("da_May9Menu");

// Define da_round
global proc int da_round(float $da_value){
    float $n = $da_value % 1;
    if($n >= 0.5){
    	$da_value = `ceil $da_value`;
    }else{
    	$da_value = `floor $da_value`;
    }
    return $da_value;
}

// Define da_MouseOver_MM_May9
string $myWrapSimbol = "\n";

global proc da_MouseOver_MM_May9(){    
	if( `popupMenu -ex da_SelectOverCleaner` ) {
	    deleteUI da_SelectOverCleaner;
	}

	popupMenu -ctl 1 -b 2 -mm 1 -p viewPanes -pmc (
	    "string $myComponentOver[] = `ls -preSelectHilite`;" +
	    "if ( `popupMenu -e -ex da_SelectOverCleaner `){" +
	        "popupMenu -e -dai da_SelectOverCleaner;" + " setParent -m da_SelectOverCleaner;" +
	    "if ( `dagObjectHit` )" +
		    "menuItem -l `da_ObjectOver` -rp \"N\" -c \"select `da_ObjectOver`; print (`da_ObjectOver` + $myWrapSimbol) \";" +
	    "else" +
	        " menuItem -en 0 -l \"No Object Detected\" -rp \"N\";" +
	    "if ( size( $myComponentOver ) ) " +
	        "menuItem -l $myComponentOver[0] -rp \"S\" -c \"select $myComponentOver[0]; print ($myComponentOver[0] + $myWrapSimbol)\";" +
	    "else" +
	        " menuItem -en 0 -l \"No polyComponent Detected\" -rp \"S\";}"
	) da_SelectOverCleaner;
}

global proc string da_ObjectOver(){
    dagObjectHit -mn "da_SelectOverCleaner";
    string $myChildren[] = `popupMenu -q -itemArray da_SelectOverCleaner`; 
    string $myObjecItem = `menuItem -q -l $myChildren[0]`;
    string $myObject[];
    tokenize $myObjecItem "." $myObject;
    popupMenu -e -dai da_SelectOverCleaner;
 
return $myObject[0];
}

// Run da_MouseOver_MM_May9
da_MouseOver_MM_May9;