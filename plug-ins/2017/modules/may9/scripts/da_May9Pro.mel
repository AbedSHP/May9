// Store May9 Version
$may9Version = "May9 Pro 2.1.0";

// Inizialize DAG Menu Procedure
catchQuiet(dagMenuProc("", ""));

// Inizialize Break Connections
channelBoxCommand -break;

// Source May9 Pro Scripts
source da_scripts.mel;

// Store initial Shelf configuration
string $myShelfCheck = `workspaceControl -q -vis Shelf`;

// Set new scene opened preferences
global proc da_may9Configurations(){
	string $osVer = `about -os`;
	if (`gmatch $osVer "*mac*"` == 1) {
		setAttr "hardwareRenderingGlobals.multiSampleEnable" 1;
	} else {
		setAttr "hardwareRenderingGlobals.lineAAEnable" 1;
		setAttr "hardwareRenderingGlobals.multiSampleEnable" 1;
	}

	outlinerEditor  -e -sam 1 -rfv 1 -atr 1 outlinerPanel1;
}
string $may9Configurations = "da_may9Configurations()";
scriptJob -e "NewSceneOpened" $may9Configurations;

// Initialize Interactive Play button
da_intPlay();

// Preload Two Bone IK and Spring IK
ik2Bsolver;
ikSpringSolver;

// Preload Crease Set Editor
python( "from maya.app.general import creaseSetEditor");

// Preload Boss Editor
if ( catchQuiet( `python( "import boss.BossEditor as be" )` ) )
	print "Please check Bifrost installation";

// Initialize May9 as Plug-in
if (`optionVar -ex May9ActivationCheck` == 0){
    //Source da_userPrefs only at first May9 run
    source da_userPrefs.mel;
    optionVar -iv May9ActivationCheck 1;

    // Inizialize May9 Pro as plug-in
	evalDeferred("workspaceLayoutManager -setCurrent \"May9 Pro\"");
	workspaceLayoutManager -setCurrent "May9 Pro";
	da_may9Configurations();

	// Shelf configuration
    if ($myShelfCheck){
		ToggleShelf;
		workspaceLayoutManager -sa "May9 Pro";
	}
}else{
	da_may9Configurations();
}

// Preload userRuntime
global proc da_userRuntime(){
    source da_userRuntime.mel;
}
catchQuiet (`da_userRuntime`);